.TH man 2 "27 October 2020" "0.32" "_printf() man page"
.SH NAME
.B _printf
- format and print data.
.SH SYNOPSIS
.B Use:
_printf [format] [argument] ...

.B Prototype:
int _printf(const char * format, ...);

.SH DESCRIPTION
The function \fB_printf()\fR writes output to \fIstdout\fR, the standard
output. The function writes under the control of a \fIformat\fR string that
 specifies how subsequent arguments (accessed via the variable-length argument
 facilities of stdarg) are converted for output.
 ties of stdarg(3)) are converted for output.
The format string is composed of zero or more directives of zero or more directives: ordinary characters (not %), which are copied unchanged to the output streams and conv
ersion specifications, each of which results in fetching zero or more sunsequent arguments. Each conversion specification is introduced by the % character. The arguments m
ust correspond properly (after type promotion) with the conversion specifier.

.B Return value
.in +2n
Upon successful return, \fB_printf()\fR returns the number of characters 
printed (excluding the null byte used to end output to strings).
.SH OPTIONS
.B %c
- Prints a single character

.B %s
- Prints a string of characters

.B %i
- Prints an int

.B %d
- Prints a decimal

.B %b
- Converts a decimal to binary

.B %u
- Prints an unsigned int

.B %x
- Converts a decimal to hexadecimal (in lowercase letter characters when applicable)

.B %X
- Converts a decimal to hexadecimal (in uppercase letter characters when applicable)

.B %o
- Converts a decimal to octal

.B %%
- Prints a single %

.B %r
- Reverses a string

.B %R
- Converts to ROT13

.B %S
- Prints non-printable characters in hexadecimal

.SH EXAMPLES
.B --- Print a single character 'h' followed by a newline:

_printf ("%c\\n", 'h');

# h


.B --- Print a string of characters 'Hello world!' followed by a newline:

_printf ("%s\\n", "Hello world!");

# Hello world!


.B --- Print an integer number 5 followed by a newline:

_printf("%i\\n", 5);

# 5


.B --- Convert the decimal 5 to binary followed by a newline:

_printf("%b\\n", 5);

# 101


.B --- Print an unsigned integer 980 followed by a newline:

_printf("%u\\n", 980);

# 980


.B --- Convert the  decimal 32654 to hexadecimal followed by a newline:

_printf("%x\\n", 32654);

# 7f8e


.B --- Convert the decimal 32654 to hexadecimal followed by a newline:

_printf("%X\\n", 32654);

# 7F8E


.B --- Convert the decimal 100 to octal followed by a newline:

_printf("%o\\n", 100);

# 144


.B --- Use \n anywhere to start a new line:

_printf ("Two separate\\nlines\\n");

# Two separate

# lines


.B --- Print a single % character, followed by a new line:

_printf("%%\\n");

# %

.B --- Print a string in reverse followed by a new line.

_printf("%r\\n", "Hello");

# olleH


.B --- Print a string converted to ROT13 followed by a new line.

_printf("%R\\n", "ROT13");

# EBG13

If an output error is encountered, -1 is returned.
.in
.SH SEE ALSO
man page printf(3).

.SH BUGS
No bugs :)

.SH AUTHOR
Matias Acosta and Roberto Ribeiro - Holberton School
